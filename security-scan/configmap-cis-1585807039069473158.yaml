apiVersion: v1
data:
  output.json: |
    {
     "v": "rke-cis-1.4",
     "t": 97,
     "f": 0,
     "p": 63,
     "s": 15,
     "na": 19,
     "n": {
      "e": [
       "zx"
      ],
      "m": [
       "zx"
      ],
      "n": [
       "zx"
      ]
     },
     "o": [
      {
       "id": "1.1",
       "d": "API Server",
       "o": [
        {
         "id": "1.1.2",
         "d": "Ensure that the --basic-auth-file argument is not set (Scored)",
         "r": "Follow the documentation and configure alternate mechanisms for authentication. Then,\nedit the API server pod specification file $apiserverconf\non the master node and remove the --basic-auth-file=\u003cfilename\u003e\nparameter.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.3",
         "d": "Ensure that the --insecure-allow-any-token argument is not set (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and remove the --insecure-allow-any-token\nparameter.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.4",
         "d": "Ensure that the --kubelet-https argument is set to true (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and remove the --kubelet-https parameter.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.5",
         "d": "Ensure that the --insecure-bind-address argument is not set (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and remove the --insecure-bind-address\nparameter.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.6",
         "d": "Ensure that the --insecure-port argument is set to 0 (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\napiserver.yaml on the master node and set the below parameter.\n--insecure-port=0\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.7",
         "d": "Ensure that the --secure-port argument is not set to 0 (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and either remove the --secure-port parameter or\nset it to a different (non-zero) desired port.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.8",
         "d": "Ensure that the --profiling argument is set to false (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the below parameter.\n--profiling=false\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.9",
         "d": "Ensure that the --repair-malformed-updates argument is set to false (Scored)",
         "r": "The argument --repair-malformed-updates has been removed as of Kubernetes version 1.14.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.10",
         "d": "Ensure that the admission control plugin AlwaysAdmit is not set (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --enable-admission-plugins parameter to a\nvalue that does not include AlwaysAdmit.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.11",
         "d": "Ensure that the admission control plugin AlwaysPullImages is set (Scored)",
         "r": "Enabling AlwaysPullImages can use significant bandwidth.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.14",
         "d": "Ensure that the admission control plugin NamespaceLifecycle is set (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --disable-admission-plugins parameter to\nensure it does not include NamespaceLifecycle.\n--disable-admission-plugins=...,NamespaceLifecycle,...\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.15",
         "d": "Ensure that the --audit-log-path argument is set as appropriate (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --audit-log-path parameter to a suitable\npath and file where you would like audit logs to be written, for example:\n--audit-log-path=/var/log/apiserver/audit.log\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.16",
         "d": "Ensure that the --audit-log-maxage argument is set to 30 or as appropriate (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --audit-log-maxage parameter to 30 or\nas an appropriate number of days: --audit-log-maxage=30\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.17",
         "d": "Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --audit-log-maxbackup parameter to 10\nor to an appropriate value.\n--audit-log-maxbackup=10\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.18",
         "d": "Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --audit-log-maxsize parameter to an\nappropriate size in MB. For example, to set it as 100 MB:\n--audit-log-maxsize=100\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.19",
         "d": "Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --authorization-mode parameter to\nvalues other than AlwaysAllow. One such example could be as below.\n--authorization-mode=RBAC\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.20",
         "d": "Ensure that the --token-auth-file parameter is not set (Scored)",
         "r": "Follow the documentation and configure alternate mechanisms for authentication. Then,\nedit the API server pod specification file $apiserverconf\non the master node and remove the --token-auth-file=\u003cfilename\u003e\nparameter.\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.21",
         "d": "Ensure that the --kubelet-certificate-authority argument is set as appropriate (Scored)",
         "r": "When generating serving certificates, functionality could break in conjunction with hostname overrides which are required for certain cloud providers.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.22",
         "d": "Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate (Scored)",
         "r": "Follow the Kubernetes documentation and set up the TLS connection between the\napiserver and kubelets. Then, edit API server pod specification file\n$apiserverconf on the master node and set the\nkubelet client certificate and key parameters as below.\n--kubelet-client-certificate=\u003cpath/to/client-certificate-file\u003e\n--kubelet-client-key=\u003cpath/to/client-key-file\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.23",
         "d": "Ensure that the --service-account-lookup argument is set to true (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the below parameter.\n--service-account-lookup=true\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.24",
         "d": "Ensure that the admission control plugin PodSecurityPolicy is set (Scored)",
         "r": "Enabling Pod Security Policy can cause applications to unexpectedly fail.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.25",
         "d": "Ensure that the --service-account-key-file argument is set as appropriate (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --service-account-key-file parameter\nto the public key file for service accounts:\n--service-account-key-file=\u003cfilename\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.26",
         "d": "Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate (Scored)",
         "r": "Follow the Kubernetes documentation and set up the TLS connection between the\napiserver and etcd. Then, edit the API server pod specification file\n$apiserverconf on the master node and set the etcd\ncertificate and key file parameters.\n--etcd-certfile=\u003cpath/to/client-certificate-file\u003e\n--etcd-keyfile=\u003cpath/to/client-key-file\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.27",
         "d": "Ensure that the admission control plugin ServiceAccount is set(Scored)",
         "r": "Follow the documentation and create ServiceAccount objects as per your environment.\nThen, edit the API server pod specification file $apiserverconf\non the master node and set the --enable-admission-plugins parameter to a\nvalue that includes ServiceAccount.\n--enable-admission-plugins=...,ServiceAccount,...\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.28",
         "d": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)",
         "r": "Follow the Kubernetes documentation and set up the TLS connection on the apiserver.\nThen, edit the API server pod specification file $apiserverconf\non the master node and set the TLS certificate and private key file\nparameters.\n--tls-cert-file=\u003cpath/to/tls-certificate-file\u003e\n--tls-private-key-file=\u003cpath/to/tls-key-file\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.29",
         "d": "Ensure that the --client-ca-file argument is set as appropriate (Scored)",
         "r": "Follow the Kubernetes documentation and set up the TLS connection on the apiserver.\nThen, edit the API server pod specification file $apiserverconf\non the master node and set the client certificate authority file.\n--client-ca-file=\u003cpath/to/client-ca-file\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.30",
         "d": "Ensure that the --etcd-cafile argument is set as appropriate (Scored)",
         "r": "Follow the Kubernetes documentation and set up the TLS connection between the\napiserver and etcd. Then, edit the API server pod specification file\n$apiserverconf on the master node and set the etcd\ncertificate authority file parameter.\n--etcd-cafile=\u003cpath/to/ca-file\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.32",
         "d": "Ensure that the --authorization-mode argument is set to Node (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\non the master node and set the --authorization-mode parameter to a\nvalue that includes Node.\n--authorization-mode=Node,RBAC\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.33",
         "d": "Ensure that the admission control plugin NodeRestriction is set (Scored)",
         "r": "Follow the Kubernetes documentation and configure NodeRestriction plug-in on\nkubelets. Then, edit the API server pod specification file $apiserverconf\non the master node and set the --enable-admission-plugins parameter to a\nvalue that includes NodeRestriction.\n--enable-admission-plugins=...,NodeRestriction,...\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.34",
         "d": "Ensure that the --encryption-provider-config argument is set as appropriate (Scored)",
         "r": "Enabling encryption changes how data can be recovered as data is encrypted.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.35",
         "d": "Ensure that the encryption provider is set to aescbc (Scored)",
         "r": "Enabling encryption changes how data can be recovered as data is encrypted.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.36",
         "d": "Ensure that the admission control plugin EventRateLimit is set (Scored)",
         "r": "EventRateLimit needs to be tuned depending on the cluster.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.37a",
         "d": "Ensure that the AdvancedAuditing argument is not set to false (Scored)",
         "r": "Follow the Kubernetes documentation and set the desired audit policy in the\n/etc/kubernetes/audit-policy.yaml file. Then, edit the API server pod specification file $apiserverconf\nand set the below parameters.\n--audit-policy-file=/etc/kubernetes/audit-policy.yaml\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.37b",
         "d": "Ensure that the AdvancedAuditing argument is not set to false (Scored)",
         "r": "Follow the Kubernetes documentation and set the desired audit policy in the\n/etc/kubernetes/audit-policy.yaml file. Then, edit the API server pod specification file $apiserverconf\nand set the below parameters.\n--audit-policy-file=/etc/kubernetes/audit-policy.yaml\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.38",
         "d": "Ensure that the --request-timeout argument is set as appropriate (Scored)",
         "r": "Edit the API server pod specification file $apiserverconf\nand set the below parameter as appropriate and if needed. For example,\n--request-timeout=300s\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.1.39",
         "d": "Ensure that the --authorization-mode argument includes RBAC (Scored)",
         "r": "Edit the API server pod specification file $apiserverbin on the master node and set the --authorization-mode parameter to a value that includes RBAC, for example: --authorization-mode=Node,RBAC\n",
         "s": "P",
         "t": [
          "m"
         ]
        }
       ]
      },
      {
       "id": "1.2",
       "d": "Scheduler",
       "o": [
        {
         "id": "1.2.1",
         "d": "Ensure that the --profiling argument is set to false (Scored)",
         "r": "Edit the Scheduler pod specification file $schedulerconf\nfile on the master node and set the below parameter.\n--profiling=false\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.2.2",
         "d": "Ensure that the --address argument is set to 127.0.0.1 (Scored)",
         "r": "Adding this argument prevents Rancher's monitoring tool to collect metrics on the scheduler.",
         "s": "S",
         "t": [
          "m"
         ]
        }
       ]
      },
      {
       "id": "1.3",
       "d": "Controller Manager",
       "o": [
        {
         "id": "1.3.1",
         "d": "Ensure that the --terminated-pod-gc-threshold argument is set as appropriate (Scored)",
         "r": "Edit the Controller Manager pod specification file $controllermanagerconf\non the master node and set the --terminated-pod-gc-threshold to an appropriate threshold, for example:\n--terminated-pod-gc-threshold=10\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.3.2",
         "d": "Ensure that the --profiling argument is set to false (Scored)",
         "r": "Edit the Controller Manager pod specification file $controllermanagerconf\non the master node and set the below parameter.\n--profiling=false\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.3.3",
         "d": "Ensure that the --use-service-account-credentials argument is set to true (Scored)",
         "r": "Edit the Controller Manager pod specification file $controllermanagerconf\non the master node to set the below parameter.\n--use-service-account-credentials=true\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.3.4",
         "d": "Ensure that the --service-account-private-key-file argument is set as appropriate (Scored)",
         "r": "Edit the Controller Manager pod specification file $controllermanagerconf\non the master node and set the --service-account-private-\nkey-file parameter to the private key file for service accounts.\n--service-account-private-key-file=\u003cfilename\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.3.5",
         "d": "Ensure that the --root-ca-file argument is set as appropriate (Scored)",
         "r": "Edit the Controller Manager pod specification file $controllermanagerconf\non the master node and set the --root-ca-file parameter to\nthe certificate bundle file.\n--root-ca-file=\u003cpath/to/file\u003e\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.3.6",
         "d": "Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)",
         "r": "Clusters provisioned by RKE handles certificate rotation directly through RKE.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.3.7",
         "d": "Ensure that the --address argument is set to 127.0.0.1 (Scored)",
         "r": "Adding this argument prevents Rancher's monitoring tool to collect metrics on the controller manager.",
         "s": "S",
         "t": [
          "m"
         ]
        }
       ]
      },
      {
       "id": "1.4",
       "d": "Configuration Files",
       "o": [
        {
         "id": "1.4.1",
         "d": "Ensure that the API server pod specification file permissions are set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for kube-apiserver.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.2",
         "d": "Ensure that the API server pod specification file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for kube-apiserver.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.3",
         "d": "Ensure that the controller manager pod specification file permissions are set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for controller-manager.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.4",
         "d": "Ensure that the controller manager pod specification file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for controller-manager.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.5",
         "d": "Ensure that the scheduler pod specification file permissions are set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for scheduler.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.6",
         "d": "Ensure that the scheduler pod specification file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for scheduler.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.7",
         "d": "Ensure that the etcd pod specification file permissions are set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for etcd.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.8",
         "d": "Ensure that the etcd pod specification file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE doesn't require or maintain a configuration file for etcd.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.13",
         "d": "Ensure that the admin.conf file permissions are set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE does not store the kubernetes default kubeconfig credentials file on the nodes.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.14",
         "d": "Ensure that the admin.conf file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE does not store the kubernetes default kubeconfig credentials file on the nodes.",
         "s": "N",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.15",
         "d": "Ensure that the scheduler.conf file permissions are set to 644 or more restrictive (Scored)",
         "r": "Run the below command (based on the file location on your system) on the\nmaster node. For example, chmod 644 /etc/kubernetes/scheduler.conf\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.16",
         "d": "Ensure that the scheduler.conf file ownership is set to root:root (Scored)",
         "r": "Run the below command (based on the file location on your system) on the\nmaster node. For example, chown root:root /etc/kubernetes/scheduler.conf\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.17",
         "d": "Ensure that the controller-manager.conf file permissions are set to 644 or more restrictive (Scored)",
         "r": "Run the below command (based on the file location on your system) on the\nmaster node. For example, chmod 644 /etc/kubernetes/controller-manager.conf\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.18",
         "d": "Ensure that the controller-manager.conf file ownership is set to root:root (Scored)",
         "r": "Run the below command (based on the file location on your system) on the\nmaster node. For example, chown root:root /etc/kubernetes/controller-manager.conf\n",
         "s": "P",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.4.19",
         "d": "Ensure that the Kubernetes PKI directory and file ownership is set to root:root (Scored)",
         "r": "Run the below command (based on the file location on your system) on the master node.\nFor example, chown -R root:root /etc/kubernetes/pki/\n",
         "s": "P",
         "t": [
          "m",
          "e"
         ]
        },
        {
         "id": "1.4.20",
         "d": "Ensure that the Kubernetes PKI certificate file permissions are set to 644 or more restrictive (Scored)",
         "r": "Run the below command (based on the file location on your system) on the master node.\nFor example, chmod -R 644 /etc/kubernetes/ssl/!(*key).pem\n",
         "s": "P",
         "t": [
          "m",
          "e"
         ]
        },
        {
         "id": "1.4.21",
         "d": "Ensure that the Kubernetes PKI certificate file permissions are set to 600 or more restrictive (Scored)",
         "r": "Run the below command (based on the file location on your system) on the master node.\nFor example, chmod -R 600 /etc/kubernetes/ssl/*key.pem\n",
         "s": "P",
         "t": [
          "m",
          "e"
         ]
        },
        {
         "id": "1.4.11",
         "d": "Ensure that the etcd data directory permissions are set to 700 or more restrictive (Scored)",
         "r": "On the etcd server node, get the etcd data directory, passed as an argument --data-dir ,\nfrom the below command:\nps -ef | grep $etcdbin\nRun the below command (based on the etcd data directory found above). For example,\nchmod 700 /var/lib/etcd\n",
         "s": "P",
         "t": [
          "e"
         ]
        },
        {
         "id": "1.4.12",
         "d": "Ensure that the etcd data directory ownership is set to etcd:etcd (Scored)",
         "r": "A system service account is required for etcd data directory ownership. Refer to Rancher's hardening guide for more details on how to configure this ownership.",
         "s": "S",
         "t": [
          "e"
         ]
        }
       ]
      },
      {
       "id": "1.5",
       "d": "etcd",
       "o": [
        {
         "id": "1.5.1",
         "d": "Ensure that the --cert-file and --key-file arguments are set as appropriate (Scored)",
         "r": "Follow the etcd service documentation and configure TLS encryption.\nThen, edit the etcd pod specification file $etcdconf on the\nmaster node and set the below parameters.\n--ca-file=\u003c/path/to/ca-file\u003e\n--key-file=\u003c/path/to/key-file\u003e\n",
         "s": "P",
         "t": [
          "e"
         ]
        },
        {
         "id": "1.5.2",
         "d": "Ensure that the --client-cert-auth argument is set to true (Scored)",
         "r": "Edit the etcd pod specification file $etcdconf on the master\nnode and set the below parameter.\n--client-cert-auth=\"true\"\n",
         "s": "P",
         "t": [
          "e"
         ]
        },
        {
         "id": "1.5.3",
         "d": "Ensure that the --auto-tls argument is not set to true (Scored)",
         "r": "Edit the etcd pod specification file $etcdconf on the master\nnode and either remove the --auto-tls parameter or set it to false.\n  --auto-tls=false\n",
         "s": "P",
         "t": [
          "e"
         ]
        },
        {
         "id": "1.5.4",
         "d": "Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate (Scored)",
         "r": "Follow the etcd service documentation and configure peer TLS encryption as appropriate\nfor your etcd cluster. Then, edit the etcd pod specification file $etcdconf on the\nmaster node and set the below parameters.\n--peer-client-file=\u003c/path/to/peer-cert-file\u003e\n--peer-key-file=\u003c/path/to/peer-key-file\u003e\n",
         "s": "P",
         "t": [
          "e"
         ]
        },
        {
         "id": "1.5.5",
         "d": "Ensure that the --peer-client-cert-auth argument is set to true (Scored)",
         "r": "Edit the etcd pod specification file $etcdconf on the master\nnode and set the below parameter.\n--peer-client-cert-auth=true\n",
         "s": "P",
         "t": [
          "e"
         ]
        },
        {
         "id": "1.5.6",
         "d": "Ensure that the --peer-auto-tls argument is not set to true (Scored)",
         "r": "Edit the etcd pod specification file $etcdconf on the master\nnode and either remove the --peer-auto-tls parameter or set it to false.\n--peer-auto-tls=false\n",
         "s": "P",
         "t": [
          "e"
         ]
        }
       ]
      },
      {
       "id": "1.7",
       "d": "PodSecurityPolicies",
       "o": [
        {
         "id": "1.7.2",
         "d": "Do not admit containers wishing to share the host process ID namespace (Scored)",
         "r": "Enabling Pod Security Policy can cause applications to unexpectedly fail.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.7.3",
         "d": "Do not admit containers wishing to share the host IPC namespace (Scored)",
         "r": "Enabling Pod Security Policy can cause applications to unexpectedly fail.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.7.4",
         "d": "Do not admit containers wishing to share the host network namespace (Scored)",
         "r": "Enabling Pod Security Policy can cause applications to unexpectedly fail.",
         "s": "S",
         "t": [
          "m"
         ]
        },
        {
         "id": "1.7.5",
         "d": " Do not admit containers with allowPrivilegeEscalation (Scored)",
         "r": "Enabling Pod Security Policy can cause applications to unexpectedly fail.",
         "s": "S",
         "t": [
          "m"
         ]
        }
       ]
      },
      {
       "id": "2.1",
       "d": "Kubelet",
       "o": [
        {
         "id": "2.1.1",
         "d": "Ensure that the --anonymous-auth argument is set to false (Scored)",
         "r": "If using a Kubelet config file, edit the file to set authentication: anonymous: enabled to\nfalse .\nIf using executable arguments, edit the kubelet service file\n$kubeletconf on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--anonymous-auth=false\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.2",
         "d": "Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)",
         "r": "If using a Kubelet config file, edit the file to set authorization: mode to Webhook.\nIf using executable arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--authorization-mode=Webhook\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.3",
         "d": "Ensure that the --client-ca-file argument is set as appropriate (Scored)",
         "r": "If using a Kubelet config file, edit the file to set authentication: x509: clientCAFile to\nthe location of the client CA file.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_AUTHZ_ARGS variable.\n--client-ca-file=\u003cpath/to/client-ca-file\u003e\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.4",
         "d": "Ensure that the --read-only-port argument is set to 0 (Scored)",
         "r": "If using a Kubelet config file, edit the file to set readOnlyPort to 0 .\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--read-only-port=0\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.5",
         "d": "Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Scored)",
         "r": "If using a Kubelet config file, edit the file to set streamingConnectionIdleTimeout to a\nvalue other than 0.\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--streaming-connection-idle-timeout=5m\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.6",
         "d": "Ensure that the --protect-kernel-defaults argument is set to true (Scored)",
         "r": "System level configurations are required prior to provisioning the cluster in order for this argument to be set to true.",
         "s": "S",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.7",
         "d": "Ensure that the --make-iptables-util-chains argument is set to true (Scored)",
         "r": "If using a Kubelet config file, edit the file to set makeIPTablesUtilChains: true .\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nremove the --make-iptables-util-chains argument from the\nKUBELET_SYSTEM_PODS_ARGS variable.\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.8",
         "d": "Ensure that the --hostname-override argument is not set (Scored)",
         "r": "Clusters provisioned by RKE clusters and most cloud providers require hostnames.",
         "s": "N",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.9",
         "d": "Ensure that the --event-qps argument is set to 0 (Scored)",
         "r": "If using a Kubelet config file, edit the file to set eventRecordQPS: 0 .\nIf using command line arguments, edit the kubelet service file\n$kubeletsvc on each worker node and\nset the below parameter in KUBELET_SYSTEM_PODS_ARGS variable.\n--event-qps=0\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.10",
         "d": "Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)",
         "r": "When generating serving certificates, functionality could break in conjunction with hostname overrides which are required for certain cloud providers.",
         "s": "S",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.11",
         "d": "Ensure that the --cadvisor-port argument is set to 0 (Scored)",
         "r": "Edit the kubelet service file $kubeletsvc\non each worker node and set the below parameter in KUBELET_CADVISOR_ARGS variable.\n--cadvisor-port=0\nBased on your system, restart the kubelet service. For example:\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.12",
         "d": "Ensure that the --rotate-certificates argument is not set to false (Scored)",
         "r": "Clusters provisioned by RKE handles certificate rotation directly through RKE.",
         "s": "N",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.1.13",
         "d": "Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)",
         "r": "Clusters provisioned by RKE handles certificate rotation directly through RKE.",
         "s": "N",
         "t": [
          "n"
         ]
        }
       ]
      },
      {
       "id": "2.2",
       "d": "Configuration Files",
       "o": [
        {
         "id": "2.2.1",
         "d": "Ensure that the kubelet.conf file permissions are set to 644 or more restrictive (Scored)",
         "r": "Run the below command (based on the file location on your system) on the each worker\nnode. For example,\nchmod 644 $kubeletkubeconfig\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.2",
         "d": "Ensure that the kubelet.conf file ownership is set to root:root (Scored)",
         "r": "Run the below command (based on the file location on your system) on the each worker\nnode. For example,\nchown root:root $kubeletkubeconfig\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.3",
         "d": "Ensure that the kubelet service file permissions are set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE doesn’t require or maintain a configuration file for the kubelet service.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.4",
         "d": "Ensure that the kubelet service file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE doesn’t require or maintain a configuration file for the kubelet service.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.5",
         "d": "Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive (Scored)",
         "r": "Run the below command (based on the file location on your system) on the each worker\nnode. For example,\nchmod 644 $proxykubeconfig\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.6",
         "d": "Ensure that the proxy kubeconfig file ownership is set to root:root (Scored)",
         "r": "Run the below command (based on the file location on your system) on the each worker\nnode. For example,\nchmod 644 $proxykubeconfig\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.7",
         "d": "Ensure that the certificate authorities file permissions are set to 644 or more restrictive (Scored)",
         "r": "Run the following command to modify the file permissions of the --client-ca-file\nchmod 644 \u003cfilename\u003e\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.8",
         "d": "Ensure that the client certificate authorities file ownership is set to root:root (Scored)",
         "r": "Run the following command to modify the ownership of the --client-ca-file .\nchown root:root \u003cfilename\u003e\n",
         "s": "P",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.9",
         "d": "Ensure that the kubelet configuration file ownership is set to root:root (Scored)",
         "r": "Clusters provisioned by RKE doesn’t require or maintain a configuration file for the kubelet.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "n"
         ]
        },
        {
         "id": "2.2.10",
         "d": "Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Scored)",
         "r": "Clusters provisioned by RKE doesn’t require or maintain a configuration file for the kubelet.\nAll configuration is passed in as arguments at container run time.",
         "s": "N",
         "t": [
          "n"
         ]
        }
       ]
      }
     ]
    }
kind: ConfigMap
metadata:
  creationTimestamp: "2020-04-02T05:58:07Z"
  name: cis-1585807039069473158
  namespace: security-scan
