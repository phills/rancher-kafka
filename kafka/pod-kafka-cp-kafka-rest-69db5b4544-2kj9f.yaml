apiVersion: v1
kind: Pod
metadata:
  annotations:
    cattle.io/timestamp: "2020-04-03T00:59:06Z"
    field.cattle.io/ports: '[[{"containerPort":5556,"dnsName":"kafka-cp-kafka-rest","hostPort":0,"kind":"ClusterIP","name":"5556tcp02","protocol":"TCP","sourcePort":0}],[{"containerPort":8082,"dnsName":"kafka-cp-kafka-rest","hostPort":0,"kind":"ClusterIP","name":"rest-proxy","protocol":"TCP","sourcePort":0},{"containerPort":5555,"dnsName":"kafka-cp-kafka-rest","hostPort":0,"kind":"ClusterIP","name":"jmx","protocol":"TCP","sourcePort":0}]]'
    prometheus.io/port: "5556"
    prometheus.io/scrape: "true"
  creationTimestamp: "2020-04-03T00:59:06Z"
  generateName: kafka-cp-kafka-rest-69db5b4544-
  labels:
    app: cp-kafka-rest
    pod-template-hash: 69db5b4544
    release: kafka
  name: kafka-cp-kafka-rest-69db5b4544-2kj9f
  namespace: kafka
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: kafka-cp-kafka-rest-69db5b4544
    uid: c6ce2473-00bf-4bea-b936-edb42b90363e
spec:
  containers:
  - command:
    - java
    - -XX:+UnlockExperimentalVMOptions
    - -XX:+UseCGroupMemoryLimitForHeap
    - -XX:MaxRAMFraction=1
    - -XshowSettings:vm
    - -jar
    - jmx_prometheus_httpserver.jar
    - "5556"
    - /etc/jmx-kafka-rest/jmx-kafka-rest-prometheus.yml
    image: solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
    imagePullPolicy: IfNotPresent
    name: prometheus-jmx-exporter
    ports:
    - containerPort: 5556
      name: 5556tcp02
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/jmx-kafka-rest
      name: jmx-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-z6dxk
      readOnly: true
  - env:
    - name: KAFKAREST_HEAP_OPTS
      value: -Xms512M -Xmx512M
    - name: KAFKA_REST_JMX_PORT
      value: "5555"
    - name: KAFKA_REST_SCHEMA_REGISTRY_URL
      value: http://kafka-cp-schema-registry:8081
    - name: KAFKA_REST_ZOOKEEPER_CONNECT
      value: kafka-cp-zookeeper-headless:2181
    - name: KAFKA_REST_HOST_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    image: confluentinc/cp-kafka-rest:5.4.1
    imagePullPolicy: IfNotPresent
    name: cp-kafka-rest-server
    ports:
    - containerPort: 8082
      name: rest-proxy
      protocol: TCP
    - containerPort: 5555
      name: jmx
      protocol: TCP
    resources: {}
    securityContext:
      capabilities: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-z6dxk
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: zx
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: kafka-cp-kafka-rest-jmx-configmap
    name: jmx-config
  - name: default-token-z6dxk
    secret:
      defaultMode: 420
      secretName: default-token-z6dxk
