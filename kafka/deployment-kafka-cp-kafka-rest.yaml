apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "5"
  creationTimestamp: "2020-04-03T00:47:25Z"
  labels:
    app: cp-kafka-rest
    chart: cp-kafka-rest-0.1.0
    heritage: Tiller
    io.cattle.field/appId: kafka
    release: kafka
  name: kafka-cp-kafka-rest
  namespace: kafka
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: cp-kafka-rest
      release: kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-03T00:59:06Z"
        field.cattle.io/ports: '[[{"containerPort":5556,"dnsName":"kafka-cp-kafka-rest","hostPort":0,"kind":"ClusterIP","name":"5556tcp02","protocol":"TCP","sourcePort":0}],[{"containerPort":8082,"dnsName":"kafka-cp-kafka-rest","hostPort":0,"kind":"ClusterIP","name":"rest-proxy","protocol":"TCP","sourcePort":0},{"containerPort":5555,"dnsName":"kafka-cp-kafka-rest","hostPort":0,"kind":"ClusterIP","name":"jmx","protocol":"TCP","sourcePort":0}]]'
        prometheus.io/port: "5556"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: cp-kafka-rest
        release: kafka
    spec:
      containers:
      - command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-kafka-rest/jmx-kafka-rest-prometheus.yml
        image: solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
        imagePullPolicy: IfNotPresent
        name: prometheus-jmx-exporter
        ports:
        - containerPort: 5556
          name: 5556tcp02
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/jmx-kafka-rest
          name: jmx-config
      - env:
        - name: KAFKAREST_HEAP_OPTS
          value: -Xms512M -Xmx512M
        - name: KAFKA_REST_JMX_PORT
          value: "5555"
        - name: KAFKA_REST_SCHEMA_REGISTRY_URL
          value: http://kafka-cp-schema-registry:8081
        - name: KAFKA_REST_ZOOKEEPER_CONNECT
          value: kafka-cp-zookeeper-headless:2181
        - name: KAFKA_REST_HOST_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: confluentinc/cp-kafka-rest:5.4.1
        imagePullPolicy: IfNotPresent
        name: cp-kafka-rest-server
        ports:
        - containerPort: 8082
          name: rest-proxy
          protocol: TCP
        - containerPort: 5555
          name: jmx
          protocol: TCP
        resources: {}
        securityContext:
          capabilities: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: kafka-cp-kafka-rest-jmx-configmap
        name: jmx-config
