apiVersion: v1
kind: Pod
metadata:
  annotations:
    cattle.io/timestamp: "2020-04-03T00:48:25Z"
    field.cattle.io/ports: '[[{"containerPort":5556,"dnsName":"kafka-cp-zookeeper","hostPort":0,"kind":"ClusterIP","name":"5556tcp02","protocol":"TCP","sourcePort":0}],[{"containerPort":2181,"dnsName":"kafka-cp-zookeeper","hostPort":0,"kind":"ClusterIP","name":"client","protocol":"TCP","sourcePort":0},{"containerPort":2888,"dnsName":"kafka-cp-zookeeper","hostPort":0,"kind":"ClusterIP","name":"server","protocol":"TCP","sourcePort":0},{"containerPort":3888,"dnsName":"kafka-cp-zookeeper","hostPort":0,"kind":"ClusterIP","name":"leader-election","protocol":"TCP","sourcePort":0},{"containerPort":5555,"dnsName":"kafka-cp-zookeeper","hostPort":0,"kind":"ClusterIP","name":"jmx","protocol":"TCP","sourcePort":0}]]'
    prometheus.io/port: "5556"
    prometheus.io/scrape: "true"
  creationTimestamp: "2020-04-03T00:48:27Z"
  generateName: kafka-cp-zookeeper-
  labels:
    app: cp-zookeeper
    controller-revision-hash: kafka-cp-zookeeper-57b758596d
    release: kafka
    statefulset.kubernetes.io/pod-name: kafka-cp-zookeeper-2
  name: kafka-cp-zookeeper-2
  namespace: kafka
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: kafka-cp-zookeeper
    uid: 027efde9-f62e-4419-8955-aba947fc45d6
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - cp-zookeeper
            - key: release
              operator: In
              values:
              - kafka
          topologyKey: kubernetes.io/hostname
        weight: 1
  containers:
  - command:
    - java
    - -XX:+UnlockExperimentalVMOptions
    - -XX:+UseCGroupMemoryLimitForHeap
    - -XX:MaxRAMFraction=1
    - -XshowSettings:vm
    - -jar
    - jmx_prometheus_httpserver.jar
    - "5556"
    - /etc/jmx-zookeeper/jmx-zookeeper-prometheus.yml
    image: solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
    imagePullPolicy: IfNotPresent
    name: prometheus-jmx-exporter
    ports:
    - containerPort: 5556
      name: 5556tcp02
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/jmx-zookeeper
      name: jmx-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-z6dxk
      readOnly: true
  - command:
    - bash
    - -c
    - |-
      ZK_FIX_HOST_REGEX="s/${HOSTNAME}\.[^:]*:/0.0.0.0:/g"
      ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) \
      ZOOKEEPER_SERVERS=`echo $ZOOKEEPER_SERVERS | sed -e "$ZK_FIX_HOST_REGEX"` \
      /etc/confluent/docker/run
    env:
    - name: KAFKA_HEAP_OPTS
      value: -Xms512M -Xmx512M
    - name: KAFKA_JMX_PORT
      value: "5555"
    - name: ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
      value: "24"
    - name: ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
      value: "3"
    - name: ZOOKEEPER_CLIENT_PORT
      value: "2181"
    - name: ZOOKEEPER_INIT_LIMIT
      value: "10"
    - name: ZOOKEEPER_MAX_CLIENT_CNXNS
      value: "60"
    - name: ZOOKEEPER_SERVERS
      value: kafka-cp-zookeeper-0.kafka-cp-zookeeper-headless.kafka:2888:3888;kafka-cp-zookeeper-1.kafka-cp-zookeeper-headless.kafka:2888:3888;kafka-cp-zookeeper-2.kafka-cp-zookeeper-headless.kafka:2888:3888
    - name: ZOOKEEPER_SYNC_LIMIT
      value: "5"
    - name: ZOOKEEPER_TICK_TIME
      value: "2000"
    - name: ZOOKEEPER_SERVER_ID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    image: confluentinc/cp-zookeeper:latest
    imagePullPolicy: IfNotPresent
    name: cp-zookeeper-server
    ports:
    - containerPort: 2181
      name: client
      protocol: TCP
    - containerPort: 2888
      name: server
      protocol: TCP
    - containerPort: 3888
      name: leader-election
      protocol: TCP
    - containerPort: 5555
      name: jmx
      protocol: TCP
    resources: {}
    securityContext:
      capabilities: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/lib/zookeeper/data
      name: datadir
    - mountPath: /var/lib/zookeeper/log
      name: datalogdir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-z6dxk
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: kafka-cp-zookeeper-2
  nodeName: zx
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: kafka-cp-zookeeper-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: datadir
  - emptyDir: {}
    name: datalogdir
  - configMap:
      defaultMode: 420
      name: kafka-cp-zookeeper-jmx-configmap
    name: jmx-config
  - name: default-token-z6dxk
    secret:
      defaultMode: 420
      secretName: default-token-z6dxk
