apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: "2020-04-03T01:39:28Z"
  labels:
    app: katafygio
    chart: katafygio-1.0.0
    heritage: Tiller
    io.cattle.field/appId: katafygio
    release: katafygio
  name: katafygio
  namespace: katafygio
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: katafygio
      release: katafygio
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-03T01:42:11Z"
        field.cattle.io/ports: '[[{"containerPort":8080,"dnsName":"katafygio","hostPort":0,"kind":"ClusterIP","name":"http","protocol":"TCP","sourcePort":18080}]]'
      creationTimestamp: null
      labels:
        app: katafygio
        chart: katafygio-1.0.0
        heritage: Tiller
        release: katafygio
    spec:
      containers:
      - command:
        - /usr/bin/katafygio
        - --local-dir=/var/lib/katafygio/data
        - --healthcheck-port=8080
        - --log-level=warning
        - --log-output=stdout
        - --resync-interval=300
        - --exclude-kind=replicaset
        - --exclude-kind=endpoints
        - --exclude-kind=event
        image: bpineau/katafygio:v0.8.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: katafygio
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          capabilities: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/katafygio/data
          name: vol1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: katafygio
      serviceAccountName: katafygio
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /mnt/k8/katafygio
          type: ""
        name: vol1
