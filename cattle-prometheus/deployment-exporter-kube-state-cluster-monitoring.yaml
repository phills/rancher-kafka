apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-04-02T05:58:50Z"
  labels:
    app: exporter-kube-state
    chart: exporter-kube-state-0.0.1
    heritage: Tiller
    io.cattle.field/appId: cluster-monitoring
    release: cluster-monitoring
  name: exporter-kube-state-cluster-monitoring
  namespace: cattle-prometheus
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: exporter-kube-state
      chart: exporter-kube-state-0.0.1
      release: cluster-monitoring
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: exporter-kube-state
        chart: exporter-kube-state-0.0.1
        release: cluster-monitoring
    spec:
      containers:
      - image: rancher/coreos-kube-state-metrics:v1.8.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
        name: kube-state
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 130Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: exporter-kube-state-cluster-monitoring
      serviceAccountName: exporter-kube-state-cluster-monitoring
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: cattle.io/os
        operator: Equal
        value: linux
